source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/plotting.r')
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
dim(pl_scrts)
pairs.annot(pl_scrts[c('x3b', 'hr', 'so', 'weight')])
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
pairs.annot(pl_scrts[c('x3b', 'hr', 'so', 'weight')])
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
pairs.annot(pl_scrts[c('x3b', 'hr', 'so', 'weight')])
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
pairs.annot(pl_scrts[c('x3b', 'hr', 'so', 'weight')])
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
pairs.annot(pl_scrts[c('x3b', 'hr', 'so', 'weight')])
svd(pl_scrts[c('x3b', 'hr', 'so', 'weight')])
careers[is.na(careers)]
careers$weight[is.na(careers$weight)]
mean(careers$weight)
not(is.na(careers$weight))
!is.na(careers$weight)
mean(careers$weight[! is.na(careers$weight)])
mean(careers$height[! is.na(careers$height)])
?colwise
ddply(careers, .(height), function(col){ sum(is.na(col)) })
ddply(careers, .(beg_year), function(col){ sum(is.na(col)) })
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
ddply(careers, .(beg_year), function(col){ sum(is.na(col)) })
ddply(careers, .(begYear), function(col){ sum(is.na(col)) })
source('~/.active-rstudio-document')
ddply(careers, .(begYear), function(col){ sum(is.na(col)) })
ddply(careers, .(begYear), colwise(function(col){ sum(is.na(col)) })
)
ddply(careers, .(begYear), colwise(function(col){ sum(is.na(col)) }))
source('~/.active-rstudio-document')
ddply(careers, .(begYear), colwise(function(col){ sum(is.na(col)) }))
ddply(careers, .(begYear), colwise(function(col){ sum(is.na(col)) > 0 }))
ddply(careers, .(begYear), colwise(function(col){ sum(is.na(col)) * 10 }))
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
ddply(careers, .(begYear), colwise(function(col){ sum(is.na(col)) * 10 }))
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
ddply(careers, .(begYear), colwise(function(col){ sum(is.na(col)) * 10 }))
source('~/.active-rstudio-document')
ddply(careers, .(begYear), colwise(function(col){ sum(is.na(col)) * 10 }))
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
ddply(careers, .(begYear), colwise(function(col){ sum(is.na(col)) * 10 }))
dim(pl_scrts)
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
dim(pl_scrts)
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
dim(pl_scrts)
pl_scrts
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
pl_scrts
svd[pl_scrts[feature_cols]]
pl_scrts[feature_cols]
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
svd(pmat)
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
?print
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
pmat
psvd_umat %*% psvd_dmat %*% psvd_vmat
psvd_umat %*% psvd_dmat[1:kdims,1:kdims] %*% psvd_vmat
kdims
xx <- psvd_umat %*% psvd_dmat[1:kdims,1:kdims] %*% psvd_vmat
head xx
head(xx)
head pmat
head(pmat)
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
xx <- psvd_umat %*% psvd_dmat[1:kdims,1:kdims] %*% psvd_vmat
head(pmat)
head(xx)
xx %*% pmat
t(xx) %*% pmat
xx %*% t(pmat)
psvd_vmat %*% t(psvd_dmat)
pmat
head(pmat)
head((psvd$u %*% psvd$d))
head((psvd$u %*% psvd_dmat))
dim((psvd$u %*% psvd_dmat))
head((psvd$u %*% psvd_dmat) %*% psvd$v)
head((psvd$u %*% psvd_dmat) %*% t(psvd$v))
dim((psvd$u %*% psvd_dmat) %*% t(psvd$v))
dim((psvd$u %*% psvd_dmat) %*% psvd$v)
dim((psvd$u %*% psvd_dmat) %*% t(psvd$v))
head((psvd$u %*% psvd_dmat) %*% t(psvd$v))
head(pmat)
((psvd$u %*% psvd_dmat) %*% t(psvd$v)) == pmat
((psvd$u %*% psvd_dmat) %*% t(psvd$v)) - pmat
((psvd$u %*% psvd_dmat) %*% t(psvd$v)) - pmat < 1e-10
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
((psvd_umat %*% psvd_dmat[1:kdims,1:kdims]) %*% psvd_vmat))
((psvd_umat %*% psvd_dmat[1:kdims,1:kdims]) %*% psvd_vmat)
(((psvd_umat %*% psvd_dmat[1:kdims,1:kdims]) %*% psvd_vmat)- pmat)
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
(((psvd_umat %*% psvd_dmat[1:kdims,1:kdims]) %*% psvd_vmat)- pmat)
source('~/.active-rstudio-document')
(((psvd_umat %*% psvd_dmat[1:kdims,1:kdims]) %*% psvd_vmat)- pmat)
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
(((psvd_umat %*% psvd_dmat[1:kdims,1:kdims]) %*% psvd_vmat)- pmat)
(((psvd_umat %*% psvd_dmat[1:kdims,1:kdims]) %*% t(psvd_vmat))- pmat)
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
psvd_vmat
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
psvd_vmat
((psvd_umat %*% psvd_dmat[1:kdims,1:kdims]) %*% t(psvd$v)[1:kdims,])
((psvd_umat %*% psvd_dmat[1:kdims,1:kdims]) %*% t(psvd$v)[1:kdims,])  - pmat
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
reconstituted - pmat
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
reconstituted - pmat
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
reconstituted - pmat
psvd$u
dim(psvd$u)
dim(psvd$u[1:kdims])
dim(psvd$u[,1:kdims])
kdims <- 5
dim(psvd$u[,1:kdims])
((psvd$u %*% psvd_dmat) %*% t(psvd$v))
head((psvd$u %*% psvd_dmat) %*% t(psvd$v))
head(pmat)
head((t(psvd$u) %*% psvd_dmat) %*% (psvd$v))
head((psvd$v %*% psvd_dmat) %*% (psvd$u))
dim(psvd$v %*% psvd_dmat)
head((psvd$v %*% psvd_dmat) %*% t(psvd$u))
head(t((psvd$v %*% psvd_dmat) %*% t(psvd$u)))
head(pmat)
dim(t((psvd$v %*% psvd_dmat)))
t((psvd$v %*% psvd_dmat)
)
t(psvd$v %*% psvd_dmat)
(t(psvd$v) %*% psvd_dmat)
(t(psvd$v) %*% t(psvd_dmat))
t(psvd$v %*% psvd_dmat)
(t(psvd$v) %*% psvd_dmat)
(t(psvd$u) %*% psvd_dmat)
(psvd_dmat %*% t(psvd$u))
t(psvd_dmat %*% t(psvd$u))
(psvd$u %*% psvd_dmat)
head(psvd$u %*% psvd_dmat)
head(t(psvd$u) %*% psvd_dmat)
head(psvd$u %*% psvd_dmat)
dim(psvd$u %*% psvd_dmat)
head(psvd$u %*% psvd_dmat)
head((psvd$u %*% psvd_dmat) %*% t(psvd$v) )
dim((psvd$u %*% psvd_dmat) %*% t(psvd$v) )
((psvd$u %*% psvd_dmat) %*% t(psvd$v) ) - pmat
(TRUE ? 5 : 3)
if(true){ 5 }
if(true, 5
if(TRUE)
5
if(TRUE) 5
if(FALSE) 5
if(FALSE) 5 else 6
chop <- function(val){ if (val < 1e-12) then 0 else val }
chop <- function(val){ if(val < 1e-12) then 0 else val }
chop <- function(val){ if(val < 1e-12) 0 else val }
chop(1e-17)
chop(1e-14)
chop(reconstituted)
apply(reconstituted, chop)
apply(reconstituted, 1, chop)
apply(reconstituted, c(1,2), chop)
head(apply(reconstituted, c(1,2), chop))
head(reconstituted)
chopmat <- function(mat){ apply(mat, c(1,2), function(val){ if(abs(val) < 1e-12) 0 else val } }}
chopmat <- function(mat){ apply(mat, c(1,2), function(val){ if(abs(val) < 1e-12) 0 else val } }
chopmat <- function(mat){ apply(mat, c(1,2), function(val){ if(abs(val) < 1e-12) 0 else val }) }
head(chopmat(reconstituted))
head(chopmat(reconstituted- pmat))
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
head(chopmat(reconstituted))
head(chopmat(reconstituted, 0.05))
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
head((psvd$u[,1:kdims] %*% psvd_dmat[1:kdims,1:kdims]) %*% t(psvd$v)[1:kdims,])
kdims <- 9
head((psvd$u[,1:kdims] %*% psvd_dmat[1:kdims,1:kdims]) %*% t(psvd$v)[1:kdims,])
head(  ((psvd$u[,1:kdims] %*% psvd_dmat[1:kdims,1:kdims]) %*% t(psvd$v)[1:kdims,])   )
head(  ((psvd$u[,1:kdims] %*% psvd_dmat[1:kdims,1:kdims]) %*% t(psvd$v)[1:kdims,]) -pmat  )
head(  ((psvd$u[,1:kdims] %*% psvd_dmat[1:kdims,1:kdims]) %*% t(psvd$v)[1:kdims,]) - pmat  )
chopmat(  ((psvd$u[,1:kdims] %*% psvd_dmat[1:kdims,1:kdims]) %*% t(psvd$v)[1:kdims,]) - pmat  , 0.01)
kdims <- 8
head(  ((psvd$u[,1:kdims] %*% psvd_dmat[1:kdims,1:kdims]) %*% t(psvd$v)[1:kdims,]) - pmat  )
chopmat(  ((psvd$u[,1:kdims] %*% psvd_dmat[1:kdims,1:kdims]) %*% t(psvd$v)[1:kdims,]) - pmat  , 0.01)
chopmat(  ((psvd$u[,1:kdims] %*% psvd_dmat[1:kdims,1:kdims]) %*% t(psvd$v)[1:kdims,]) - pmat  , 0.1)
dim(psvd$v)
dim(psvd$u)
dim(pmat)
((psvd$u[,1:kdims] %*% psvd_dmat[1:kdims,1:kdims]) %*% t(psvd$v)[1:kdims,])
kdims
((psvd$u[,1:kdims] %*% psvd_dmat[1:kdims,1:kdims]) %*% t(psvd$v)[1:kdims,])
head((psvd$u[,1:kdims] %*% psvd_dmat[1:kdims,1:kdims]) %*% t(psvd$v)[1:kdims,])
head(psvd$u[,1:kdims] %*% (psvd_dmat[1:kdims,1:kdims] %*% t(psvd$v)[1:kdims,]))
head((psvd_dmat[1:kdims,1:kdims] %*% t(psvd$v)[1:kdims,])
)
head((psvd_dmat[1:kdims,1:kdims] %*% t(psvd$v)[1:kdims,]))
dims((psvd_dmat[1:kdims,1:kdims] %*% t(psvd$v)[1:kdims,]))
dim((psvd_dmat[1:kdims,1:kdims] %*% t(psvd$v)[1:kdims,]))
dim((psvd_dmat[,1:kdims] %*% t(psvd$v)[1:kdims,]))
psvd$u %*% dim((psvd_dmat[,1:kdims] %*% t(psvd$v)[1:kdims,]))
head( psvd$u %*% dim((psvd_dmat[,1:kdims] %*% t(psvd$v)[1:kdims,])) )
head( psvd$u %*% ((psvd_dmat[,1:kdims] %*% t(psvd$v)[1:kdims,])) )
head( (psvd$u %*% ((psvd_dmat[,1:kdims] %*% t(psvd$v)[1:kdims,])) ) )
head( (psvd$u %*% ((psvd_dmat[,1:kdims] %*% t(psvd$v)[1:kdims,])) ) - pmat )
kdims <- 10
head( (psvd$u %*% ((psvd_dmat[,1:kdims] %*% t(psvd$v)[1:kdims,])) ) - pmat )
kdims <- 8
head( (psvd$u %*% ((psvd_dmat[,1:kdims] %*% t(psvd$v)[1:kdims,])) ) - pmat )
kdims <- 9
head( (psvd$u %*% ((psvd_dmat[,1:kdims] %*% t(psvd$v)[1:kdims,])) ) - pmat )
head( (pmat %*% ((psvd_dmat[,1:kdims] %*% t(psvd$v)[1:kdims,])) ) - psvd$u )
head(pmat %*% ((psvd_dmat[,1:kdims] %*% t(psvd$v)[1:kdims,])) )
pmat
head(((psvd_dmat[,1:kdims] %*% t(psvd$v)[1:kdims,])) %*% t(pmat) )
head(t( ((psvd_dmat[,1:kdims] %*% t(psvd$v)[1:kdims,])) %*% t(pmat) ) )
?stats:::prcomp.default
stats:::prcomp.default
stats:::prcomp.default(pmat)
stats:::prcomp.default(t(pmat)
)
options(digits=3)
stats:::prcomp.default(t(pmat))
options(digits=2)
stats:::prcomp.default(t(pmat))
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
stats:::prcomp.default(t(pmat))
stats:::prcomp.default
1L
typeof(1L)
typeof(1)
?paste0
pmat %*% psvd$v
pairs.annot(pmat)
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
pmat
pairs.annot(pmat)
pairs.annot(pmat %*% psvd$v)
stats:::prcomp.default
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
eigen(psvd)
eigen(pmat)
USArrests
?princomp
princomp
princomp(USArrests, cor = TRUE)
princomp(USArrests, cor = TRUE)$loadings
stackloss
x <- princomp(USArrests, cor = TRUE)
x[0,]
x[,0]
x
princomp
prcomp(pmat)
prcomp(pmat)$v
prcomp(pmat)$rotation
prcomp(pmat)$rotation %*% pmat
pmat %*% prcomp(pmat)$rotation
pairs.annot(pmat %*% prcomp(pmat)$rotation)
pairs.annot(pmat)
stats:::prcomp.default
stats:::prcomp
pmat %*% prcomp(pmat)$rotation
pmat %*% psvd$v
svd(pmat %*% psvd$v)
chopmat(svd(pmat %*% psvd$v)$v)
pmat %*% psvd$v
psvd$v
pmat %*% psvd$v
pairs.annot(pmat %*% psvd$v)
pairs.annot(pmat %*% psvd$v[1,])
pairs.annot(pmat %*% psvd$v[,1])
pairs.annot(pmat %*% psvd$v[,1:2])
psvd$v[,1:2]
psvd$v
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
psvd$v
pairs.annot(pmat)
pl_scrts[feature_cols]
pairs.annot(pl_scrts[feature_cols])
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
pairs.annot(pl_scrts[feature_cols])
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
pairs.annot(pl_scrts[feature_cols])
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
pairs.annot(pl_scrts[feature_cols])
psvd$v
psvd$v[1,]
psvd$v[,1]
psvd$v[,1:2]
pl_scrts
pl_scrts[c('a', 'b')] <- psvd$v[,1:2]
pl_scrts[c('a', 'b')] <- pmat %*% psvd$v[,1:2]
pl_scrts
arrange(pl_scrts, a, b)
arrange(pl_scrts, b)
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
psvd$v
pairs.annot(pl_scrts[feature_cols])
options(digits=2)
pairs.annot(pl_scrts[feature_cols])
psvd$v
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
pairs.annot(pl_scrts[feature_cols])
psvd$v
psvd$v[,1:2]
pl_scrts[c('a', 'b')] <- pmat %*% psvd$v[,1:2]
arrange(pl_scrts, a, b)
arrange(pl_scrts, sb)
arrange(careers, sb)
arrange(pl_rates, sb)
arrange(pl_rates, x2b)
arrange(pl_rates, h)
arrange(pl_rates, hr)
source('~/.active-rstudio-document')
arrange(pl_rates, hr)
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
arrange(pl_rates, hr)
tail arrange(pl_rates, hr)
tail( arrange(pl_rates, hr))
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
tail( arrange(pl_rates, hr))
source('~/.active-rstudio-document')
tail( arrange(pl_rates, hr))
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
tail( arrange(pl_rates, hr))
tail( arrange(pl_rates, sb))
arrange(pl_rates, hr)
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
arrange(pl_rates, hr)
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
option(max.print=1000)
options(max.print=1000)
arrange(pl_rates, hr)
options(max.print=1200)
arrange(pl_rates, hr)
options(max.print=1500)
arrange(pl_rates, hr)
options(max.print=5000)
arrange(pl_rates, hr)
options(max.print=10000)
arrange(pl_rates, hr)
options(max.print=1000)
arrange(pl_rates, desc(hr))
pl_scrts[c('a', 'b')] <- pmat %*% psvd$v[,1:2]
arrange(pl_scrts, desc(a))
careers[c('a', 'b')] <- pmat %*% psvd$v[,1:2]
arrange(careers, desc(a))
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
careers[c('a', 'b')] <- pmat %*% psvd$v[,1:2]
arrange(careers, desc(a))
pl_rates[c('a', 'b')] <- pmat %*% psvd$v[,1:2]
arrange(pl_rates, desc(a))
arrange(pl_rates, a)
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
pl_rates[c('a', 'b')] <- pmat %*% psvd$v[,1:2]
arrange(pl_rates, a)
pairs.annot(pl_rates)
pairs.annot(pl_rates[feature_cols])
arrange(pl_rates, b)
arrange(pl_rates, desc(b))
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
arrange(pl_rates, desc(b))
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
arrange(pl_rates, desc(q3))
arrange(pl_rates, q3)
arrange(pl_rates, q2)
arrange(pl_rates, desc(q2))
arrange(pl_rates, q2)
xx <- arrange(pl_rates, q2)
View(xx)
psvd$v
pairs.annot(pl_rates[unlist(feature_cols, 'obp', 'slg')])
pairs.annot(pl_rates[unlist(feature_cols, 'obp', 'slg', 'q1', 'q2', 'q3', 'q4')])
source('~/.active-rstudio-document')
pairs.annot(pl_rates[unlist(feature_cols, 'obp', 'slg', 'iso', 'q1', 'q2', 'q3', 'q4')])
pairs.annot(pl_rates[unlist(c(feature_cols, 'obp', 'slg', 'iso', 'q1', 'q2', 'q3', 'q4'))])
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/plotting.r')
xx <- arrange(pl_rates, desc(q2))
View(xx)
xx <- arrange(pl_rates, desc(q3))
View(xx)
source('~/ics/core/wukong/data/sports/baseball/baseball_databank/tmp/player_clustering/fiddle.r')
xx <- arrange(pl_rates, desc(q3))
View(xx)
psvd$v
xx <- arrange(pl_rates, desc(q2))
View(xx)
